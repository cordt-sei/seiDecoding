// source: oracle/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var gogoproto_gogo_pb = require('../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var oracle_oracle_pb = require('../oracle/oracle_pb.js');
goog.object.extend(proto, oracle_oracle_pb);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryActivesRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryActivesResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryParamsRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryParamsResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryTwapsRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryTwapsResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest', null, global);
goog.exportSymbol('proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.displayName = 'proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.repeatedFields_, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryActivesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryActivesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryActivesRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryActivesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seiprotocol.seichain.oracle.QueryActivesResponse.repeatedFields_, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryActivesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryActivesResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryActivesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.repeatedFields_, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryTwapsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryTwapsRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryTwapsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seiprotocol.seichain.oracle.QueryTwapsResponse.repeatedFields_, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryTwapsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryTwapsResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryTwapsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.displayName = 'proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.displayName = 'proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryParamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryParamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryParamsRequest.displayName = 'proto.seiprotocol.seichain.oracle.QueryParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seiprotocol.seichain.oracle.QueryParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.seiprotocol.seichain.oracle.QueryParamsResponse.displayName = 'proto.seiprotocol.seichain.oracle.QueryParamsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    denom: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest;
  return proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest} returns this
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateRequest.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleExchangeRate: (f = msg.getOracleExchangeRate()) && oracle_oracle_pb.OracleExchangeRate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse;
  return proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new oracle_oracle_pb.OracleExchangeRate;
      reader.readMessage(value,oracle_oracle_pb.OracleExchangeRate.deserializeBinaryFromReader);
      msg.setOracleExchangeRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleExchangeRate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      oracle_oracle_pb.OracleExchangeRate.serializeBinaryToWriter
    );
  }
};


/**
 * optional OracleExchangeRate oracle_exchange_rate = 1;
 * @return {?proto.seiprotocol.seichain.oracle.OracleExchangeRate}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.prototype.getOracleExchangeRate = function() {
  return /** @type{?proto.seiprotocol.seichain.oracle.OracleExchangeRate} */ (
    jspb.Message.getWrapperField(this, oracle_oracle_pb.OracleExchangeRate, 1));
};


/**
 * @param {?proto.seiprotocol.seichain.oracle.OracleExchangeRate|undefined} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse} returns this
*/
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.prototype.setOracleExchangeRate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.prototype.clearOracleExchangeRate = function() {
  return this.setOracleExchangeRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRateResponse.prototype.hasOracleExchangeRate = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest;
  return proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.toObject = function(includeInstance, msg) {
  var f, obj = {
    denom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    oracleExchangeRate: (f = msg.getOracleExchangeRate()) && oracle_oracle_pb.OracleExchangeRate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair}
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair;
  return proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair}
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = new oracle_oracle_pb.OracleExchangeRate;
      reader.readMessage(value,oracle_oracle_pb.OracleExchangeRate.deserializeBinaryFromReader);
      msg.setOracleExchangeRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOracleExchangeRate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      oracle_oracle_pb.OracleExchangeRate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair} returns this
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OracleExchangeRate oracle_exchange_rate = 2;
 * @return {?proto.seiprotocol.seichain.oracle.OracleExchangeRate}
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.getOracleExchangeRate = function() {
  return /** @type{?proto.seiprotocol.seichain.oracle.OracleExchangeRate} */ (
    jspb.Message.getWrapperField(this, oracle_oracle_pb.OracleExchangeRate, 2));
};


/**
 * @param {?proto.seiprotocol.seichain.oracle.OracleExchangeRate|undefined} value
 * @return {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair} returns this
*/
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.setOracleExchangeRate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair} returns this
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.clearOracleExchangeRate = function() {
  return this.setOracleExchangeRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.prototype.hasOracleExchangeRate = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    denomOracleExchangeRatePairsList: jspb.Message.toObjectList(msg.getDenomOracleExchangeRatePairsList(),
    proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse;
  return proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair;
      reader.readMessage(value,proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.deserializeBinaryFromReader);
      msg.addDenomOracleExchangeRatePairs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenomOracleExchangeRatePairsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DenomOracleExchangeRatePair denom_oracle_exchange_rate_pairs = 1;
 * @return {!Array<!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair>}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.prototype.getDenomOracleExchangeRatePairsList = function() {
  return /** @type{!Array<!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair, 1));
};


/**
 * @param {!Array<!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair>} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse} returns this
*/
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.prototype.setDenomOracleExchangeRatePairsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair}
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.prototype.addDenomOracleExchangeRatePairs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.seiprotocol.seichain.oracle.DenomOracleExchangeRatePair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryExchangeRatesResponse.prototype.clearDenomOracleExchangeRatePairsList = function() {
  return this.setDenomOracleExchangeRatePairsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryActivesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryActivesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryActivesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryActivesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryActivesRequest}
 */
proto.seiprotocol.seichain.oracle.QueryActivesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryActivesRequest;
  return proto.seiprotocol.seichain.oracle.QueryActivesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryActivesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryActivesRequest}
 */
proto.seiprotocol.seichain.oracle.QueryActivesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryActivesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryActivesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryActivesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryActivesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryActivesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryActivesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    activesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryActivesResponse}
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryActivesResponse;
  return proto.seiprotocol.seichain.oracle.QueryActivesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryActivesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryActivesResponse}
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addActives(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryActivesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryActivesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string actives = 1;
 * @return {!Array<string>}
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.prototype.getActivesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryActivesResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.prototype.setActivesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.seiprotocol.seichain.oracle.QueryActivesResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.prototype.addActives = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.seiprotocol.seichain.oracle.QueryActivesResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryActivesResponse.prototype.clearActivesList = function() {
  return this.setActivesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest;
  return proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    voteTargetsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse;
  return proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVoteTargets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoteTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string vote_targets = 1;
 * @return {!Array<string>}
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.prototype.getVoteTargetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.prototype.setVoteTargetsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.prototype.addVoteTargets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryVoteTargetsResponse.prototype.clearVoteTargetsList = function() {
  return this.setVoteTargetsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest;
  return proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    priceSnapshotsList: jspb.Message.toObjectList(msg.getPriceSnapshotsList(),
    oracle_oracle_pb.PriceSnapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse;
  return proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new oracle_oracle_pb.PriceSnapshot;
      reader.readMessage(value,oracle_oracle_pb.PriceSnapshot.deserializeBinaryFromReader);
      msg.addPriceSnapshots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriceSnapshotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      oracle_oracle_pb.PriceSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PriceSnapshot price_snapshots = 1;
 * @return {!Array<!proto.seiprotocol.seichain.oracle.PriceSnapshot>}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.prototype.getPriceSnapshotsList = function() {
  return /** @type{!Array<!proto.seiprotocol.seichain.oracle.PriceSnapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, oracle_oracle_pb.PriceSnapshot, 1));
};


/**
 * @param {!Array<!proto.seiprotocol.seichain.oracle.PriceSnapshot>} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse} returns this
*/
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.prototype.setPriceSnapshotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.seiprotocol.seichain.oracle.PriceSnapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.seiprotocol.seichain.oracle.PriceSnapshot}
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.prototype.addPriceSnapshots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.seiprotocol.seichain.oracle.PriceSnapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryPriceSnapshotHistoryResponse.prototype.clearPriceSnapshotsList = function() {
  return this.setPriceSnapshotsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryTwapsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryTwapsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lookbackSeconds: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryTwapsRequest}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryTwapsRequest;
  return proto.seiprotocol.seichain.oracle.QueryTwapsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryTwapsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryTwapsRequest}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLookbackSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryTwapsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryTwapsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLookbackSeconds();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 lookback_seconds = 1;
 * @return {number}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.prototype.getLookbackSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryTwapsRequest} returns this
 */
proto.seiprotocol.seichain.oracle.QueryTwapsRequest.prototype.setLookbackSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryTwapsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryTwapsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleTwapsList: jspb.Message.toObjectList(msg.getOracleTwapsList(),
    oracle_oracle_pb.OracleTwap.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryTwapsResponse}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryTwapsResponse;
  return proto.seiprotocol.seichain.oracle.QueryTwapsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryTwapsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryTwapsResponse}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new oracle_oracle_pb.OracleTwap;
      reader.readMessage(value,oracle_oracle_pb.OracleTwap.deserializeBinaryFromReader);
      msg.addOracleTwaps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryTwapsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryTwapsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleTwapsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      oracle_oracle_pb.OracleTwap.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OracleTwap oracle_twaps = 1;
 * @return {!Array<!proto.seiprotocol.seichain.oracle.OracleTwap>}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.prototype.getOracleTwapsList = function() {
  return /** @type{!Array<!proto.seiprotocol.seichain.oracle.OracleTwap>} */ (
    jspb.Message.getRepeatedWrapperField(this, oracle_oracle_pb.OracleTwap, 1));
};


/**
 * @param {!Array<!proto.seiprotocol.seichain.oracle.OracleTwap>} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryTwapsResponse} returns this
*/
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.prototype.setOracleTwapsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.seiprotocol.seichain.oracle.OracleTwap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.seiprotocol.seichain.oracle.OracleTwap}
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.prototype.addOracleTwaps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.seiprotocol.seichain.oracle.OracleTwap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.seiprotocol.seichain.oracle.QueryTwapsResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryTwapsResponse.prototype.clearOracleTwapsList = function() {
  return this.setOracleTwapsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest;
  return proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string validator_addr = 1;
 * @return {string}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.prototype.getValidatorAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest} returns this
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationRequest.prototype.setValidatorAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feederAddr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse;
  return proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeederAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeederAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string feeder_addr = 1;
 * @return {string}
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.prototype.getFeederAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryFeederDelegationResponse.prototype.setFeederAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest;
  return proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string validator_addr = 1;
 * @return {string}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.prototype.getValidatorAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest} returns this
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterRequest.prototype.setValidatorAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    votePenaltyCounter: (f = msg.getVotePenaltyCounter()) && oracle_oracle_pb.VotePenaltyCounter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse;
  return proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new oracle_oracle_pb.VotePenaltyCounter;
      reader.readMessage(value,oracle_oracle_pb.VotePenaltyCounter.deserializeBinaryFromReader);
      msg.setVotePenaltyCounter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVotePenaltyCounter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      oracle_oracle_pb.VotePenaltyCounter.serializeBinaryToWriter
    );
  }
};


/**
 * optional VotePenaltyCounter vote_penalty_counter = 1;
 * @return {?proto.seiprotocol.seichain.oracle.VotePenaltyCounter}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.prototype.getVotePenaltyCounter = function() {
  return /** @type{?proto.seiprotocol.seichain.oracle.VotePenaltyCounter} */ (
    jspb.Message.getWrapperField(this, oracle_oracle_pb.VotePenaltyCounter, 1));
};


/**
 * @param {?proto.seiprotocol.seichain.oracle.VotePenaltyCounter|undefined} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse} returns this
*/
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.prototype.setVotePenaltyCounter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.prototype.clearVotePenaltyCounter = function() {
  return this.setVotePenaltyCounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.seiprotocol.seichain.oracle.QueryVotePenaltyCounterResponse.prototype.hasVotePenaltyCounter = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest;
  return proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    windowProgress: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse;
  return proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWindowProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWindowProgress();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 window_progress = 1;
 * @return {number}
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.prototype.getWindowProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QuerySlashWindowResponse.prototype.setWindowProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryParamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryParamsRequest}
 */
proto.seiprotocol.seichain.oracle.QueryParamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryParamsRequest;
  return proto.seiprotocol.seichain.oracle.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryParamsRequest}
 */
proto.seiprotocol.seichain.oracle.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryParamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seiprotocol.seichain.oracle.QueryParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seiprotocol.seichain.oracle.QueryParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && oracle_oracle_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seiprotocol.seichain.oracle.QueryParamsResponse}
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seiprotocol.seichain.oracle.QueryParamsResponse;
  return proto.seiprotocol.seichain.oracle.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seiprotocol.seichain.oracle.QueryParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seiprotocol.seichain.oracle.QueryParamsResponse}
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new oracle_oracle_pb.Params;
      reader.readMessage(value,oracle_oracle_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seiprotocol.seichain.oracle.QueryParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seiprotocol.seichain.oracle.QueryParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      oracle_oracle_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.seiprotocol.seichain.oracle.Params}
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.prototype.getParams = function() {
  return /** @type{?proto.seiprotocol.seichain.oracle.Params} */ (
    jspb.Message.getWrapperField(this, oracle_oracle_pb.Params, 1));
};


/**
 * @param {?proto.seiprotocol.seichain.oracle.Params|undefined} value
 * @return {!proto.seiprotocol.seichain.oracle.QueryParamsResponse} returns this
*/
proto.seiprotocol.seichain.oracle.QueryParamsResponse.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.seiprotocol.seichain.oracle.QueryParamsResponse} returns this
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.seiprotocol.seichain.oracle.QueryParamsResponse.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.seiprotocol.seichain.oracle);
